qqline
qplot(x = 2, y = prop.reject, data = subset(propreject, subset = ranef != "norm" & random.effect == "b0" & nortest == "AD" & var.settings == "sige2_sigb1" & alpha == 0.05), geom = c("smooth"), facets = ~ rotation, colour = error, group = interaction(error, ranef), se = F, method = "lm", linetype = ranef) + xlab("s")
Preliminaries#
library(ggplot2)#
#
### Reading in the data#
propreject <- read.csv(file.choose()) # choose PropRejectSummary.csv#
#
propreject$rotation <- factor(propreject$rotation, levels = levels(propreject$rotation)[c(2,3,1)])#
propreject$s <- factor(propreject$s)
qplot(x = 2, y = prop.reject, data = subset(propreject, subset = ranef != "norm" & random.effect == "b0" & nortest == "AD" & var.settings == "sige2_sigb1" & alpha == 0.05), geom = c("smooth"), facets = ~ rotation, colour = error, group = interaction(error, ranef), se = F, method = "lm", linetype = ranef) + xlab("s")
qplot(x = 2, y = prop.reject, data = subset(propreject, subset = ranef != "norm" & random.effect == "b0" & nortest == "AD" & var.settings == "sige2_sigb1" & alpha == 0.05), geom = c("point", "smooth"), facets = ~ rotation, colour = error, group = interaction(error, ranef), se = F, method = "lm", linetype = ranef) + xlab("s") + ylab("proportion of tests rejected") + theme_bw() + scale_color_discrete("Error distribution", labels = c("Skewed", "Normal", "Heavy tailed")) + scale_linetype_discrete("Random effects\ndistribution", labels = c("Skewed", "Heavy tailed"))
qplot(x = 2, y = prop.reject, data = subset(propreject, subset = ranef != "norm" & random.effect == "b0" & nortest == "AD" & var.settings == "sige2_sigb1" & alpha == 0.05), geom = c("point", "smooth"), facets = ~ rotation, colour = error, group = interaction(error, ranef), se = F, method = "lm", linetype = ranef)
qplot(x = 2, y = prop.reject, data = subset(propreject, subset = ranef != "norm" & random.effect == "b0" & nortest == "AD" & var.settings == "sige2_sigb1" & alpha == 0.05), geom = c("point", "smooth"), facets = ~ rotation, colour = error, group = interaction(error, ranef), se = F, method = "lm")
q("no")
Preliminaries#
library(ggplot2)#
#
### Reading in the data#
propreject <- read.csv(file.choose()) # choose PropRejectSummary.csv#
#
propreject$rotation <- factor(propreject$rotation, levels = levels(propreject$rotation)[c(2,3,1)])#
propreject$s <- factor(propreject$s)#
#
### Plotting the type I error#
# Summarizing results of AD tests for random intercept#
qplot(x = s, y = prop.reject, data = subset(propreject, subset = ranef == "norm" & nortest == "AD" &  alpha == 0.05 & random.effect == "b0" & var.settings == "sige2_sigb1"), geom = c("point", "smooth"), colour = error, group = error, linetype = error, se = F, method = "lm") + #
	facet_grid(. ~ rotation, scales = "free") + #
	xlab("s") +#
	ylab("proportion of tests rejected") + #
	scale_linetype_discrete("Error distribution", labels = c("Skewed", "Normal", "Heavy tailed")) + 	scale_color_discrete("Error distribution", labels = c("Skewed", "Normal", "Heavy tailed")) + #
	ylim(0, .2)#
#
# Summarizing results of AD tests for random slope#
qplot(x = s, y = prop.reject, data = subset(propreject, subset = ranef == "norm" & nortest == "AD" &  alpha == 0.05 & random.effect == "b1" & var.settings == "sige2_sigb1"), geom = c("point", "smooth"), colour = error, group = error, linetype = error, se = F, method = "lm") + #
	facet_grid(. ~ rotation, scales = "free") + #
	xlab("s") +#
	ylab("proportion of tests rejected") + #
	scale_linetype_discrete("Error distribution", labels = c("Skewed", "Normal", "Heavy tailed")) + 	scale_color_discrete("Error distribution", labels = c("Skewed", "Normal", "Heavy tailed")) + #
	ylim(0, .4)
Preliminaries#
library(ggplot2)#
library(reshape2)#
library(plyr)#
#
### Reading in the data#
fc.summary <- read.csv(file.choose()) # read in FCsummary.csv#
#
### formatting df for ggplot#
fc.melted <- melt(fc.summary, id.vars=c("sigma_e", "sigma_b", "e_dsn", "b_dsn", "s_int", "s_slope"), value.name = "fc")#
#
# Some labels for the plots#
fc.melted$`Var. structure` <- with(fc.melted, interaction(sigma_e, sigma_b), drop = T)#
fc.melted$`Var. structure` <- factor(fc.melted$`Var. structure`, levels = levels(fc.melted$`Var. structure`)[c(2,1,3,4)])#
levels(fc.melted$variable) <- c("intercept", "slope")#
#
# Making an 's' column compatible with facetting#
fc.melted$s <- NA#
fc.melted$s[fc.melted$variable == "intercept"] <- fc.melted$s_int[fc.melted$variable == "intercept"]#
fc.melted$s[fc.melted$variable == "slope"] <- fc.melted$s_slope[fc.melted$variable == "slope"]#
qplot(x = s, y = fc, data = fc.melted, geom = c("point", "smooth"), group = `Var. structure`,  colour = `Var. structure`, facets = ~ variable, se = FALSE, linetype = `Var. structure`, alpha = I(0.5)) + #
xlim(30, 60) + #
scale_color_discrete(labels = c(expression(paste(sigma[epsilon]^2==4, ", ", sigma[b]^2==1)), expression(paste(sigma[epsilon]^2==1, ", ", sigma[b]^2==1)), expression(paste(sigma[epsilon]^2==1, ", ", sigma[b]^2==4)))) + #
scale_linetype_discrete(labels = c(expression(paste(sigma[epsilon]^2==4, ", ", sigma[b]^2==1)), expression(paste(sigma[epsilon]^2==1, ", ", sigma[b]^2==1)), expression(paste(sigma[epsilon]^2==1, ", ", sigma[b]^2==4)))) + #
xlab("s") + ylab("fraction confounding") + theme_bw() + #
theme(legend.position="top")
q("no")
